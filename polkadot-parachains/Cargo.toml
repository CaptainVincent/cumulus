[package]
name = "polkadot-collator"
version = "5.1.0"
authors = ["Parity Technologies <admin@parity.io>"]
build = "build.rs"
edition = "2021"

[[bin]]
name = "polkadot-collator"
path = "src/main.rs"

[dependencies]
clap = { version = "3.0", features = ["derive"] }
futures = { version = "0.3.1", features = ["compat"] }
log = "0.4.8"
codec = { package = "parity-scale-codec", version = "2.3.0" }
serde = { version = "1.0.132", features = ["derive"] }
hex-literal = "0.2.1"
async-trait = "0.1.42"

# Parachain runtimes
rococo-parachain-runtime = { path = "rococo-parachain" }
shell-runtime = { path = "shell" }
seedling-runtime = { path = "seedling" }
statemint-runtime = { path = "statemint" }
statemine-runtime = { path = "statemine" }
westmint-runtime = { path = "westmint" }
parachains-common = { path = "parachains-common" }

# Substrate dependencies
frame-benchmarking = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
frame-benchmarking-cli = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sp-runtime = { git = "https://github.com/paritytech/substrate", default-features = false, branch = "kiz-inner-hashing-test" }
sp-io = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sp-core = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sp-inherents = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sp-consensus = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sp-session = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sc-consensus = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sc-cli = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sc-client-api = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sc-executor = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sc-service = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sc-telemetry = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sc-transaction-pool = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sp-transaction-pool = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sc-network = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sc-basic-authorship = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sp-timestamp = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sp-blockchain = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sp-block-builder = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sp-keystore = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sc-chain-spec = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sc-rpc = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sc-tracing = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sp-offchain = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sp-api = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
sp-consensus-aura = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
substrate-prometheus-endpoint = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }

# try-runtime stuff.
try-runtime-cli = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }

# RPC related dependencies
jsonrpc-core = "18.0.0"
sc-transaction-pool-api = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
frame-rpc-system = { package = "substrate-frame-rpc-system", git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }
pallet-transaction-payment-rpc = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }

# Cumulus dependencies
cumulus-client-cli = { path = "../client/cli" }
cumulus-client-consensus-aura = { path = "../client/consensus/aura" }
cumulus-client-consensus-relay-chain = { path = "../client/consensus/relay-chain" }
cumulus-client-consensus-common = { path = "../client/consensus/common" }
cumulus-client-service = { path = "../client/service" }
cumulus-client-network = { path = "../client/network" }
cumulus-primitives-core = { path = "../primitives/core" }
cumulus-primitives-parachain-inherent = { path = "../primitives/parachain-inherent" }
cumulus-relay-chain-interface = { path = "../client/relay-chain-interface" }
cumulus-relay-chain-local = { path = "../client/relay-chain-local" }

# Polkadot dependencies
polkadot-primitives = { git = "https://github.com/paritytech/polkadot", branch = "kiz-inner-hashing-test" }
polkadot-service = { git = "https://github.com/paritytech/polkadot", branch = "kiz-inner-hashing-test" }
polkadot-cli = { git = "https://github.com/paritytech/polkadot", branch = "kiz-inner-hashing-test" }
polkadot-parachain = { git = "https://github.com/paritytech/polkadot", branch = "kiz-inner-hashing-test" }
xcm = { git = "https://github.com/paritytech/polkadot", branch = "kiz-inner-hashing-test" }

[build-dependencies]
substrate-build-script-utils = { git = "https://github.com/paritytech/substrate", branch = "kiz-inner-hashing-test" }

[dev-dependencies]
assert_cmd = "0.12"
nix = "0.17"
tempfile = "3.2.0"

[features]
default = []
runtime-benchmarks = [
	"polkadot-service/runtime-benchmarks",
	"statemint-runtime/runtime-benchmarks",
	"statemine-runtime/runtime-benchmarks",
	"westmint-runtime/runtime-benchmarks",
]
try-runtime = [
	'statemint-runtime/try-runtime',
	'statemine-runtime/try-runtime',
	'westmint-runtime/try-runtime',
	'shell-runtime/try-runtime',
]
